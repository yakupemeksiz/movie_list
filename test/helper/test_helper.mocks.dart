// Mocks generated by Mockito 5.4.4 from annotations
// in movie_list/test/helper/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dio/dio.dart' as _i8;
import 'package:either_dart/either.dart' as _i14;
import 'package:firebase_core/firebase_core.dart' as _i3;
import 'package:firebase_remote_config/firebase_remote_config.dart' as _i16;
import 'package:firebase_remote_config_platform_interface/firebase_remote_config_platform_interface.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;
import 'package:movie_list/common/failure/failure.dart' as _i15;
import 'package:movie_list/repository/movie_repository.dart' as _i13;
import 'package:movie_list/services/models/request/movie_request_model.dart'
    as _i9;
import 'package:movie_list/services/models/response/genre_response_model.dart'
    as _i11;
import 'package:movie_list/services/models/response/movie_detail_response_model.dart'
    as _i2;
import 'package:movie_list/services/models/response/movie_response_model.dart'
    as _i7;
import 'package:movie_list/services/models/response/movie_video_response_model.dart'
    as _i12;
import 'package:movie_list/services/movie_service/movie_service.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovieDetailResponseModel_0 extends _i1.SmartFake
    implements _i2.MovieDetailResponseModel {
  _FakeMovieDetailResponseModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseApp_1 extends _i1.SmartFake implements _i3.FirebaseApp {
  _FakeFirebaseApp_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_2 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoteConfigSettings_3 extends _i1.SmartFake
    implements _i4.RemoteConfigSettings {
  _FakeRemoteConfigSettings_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoteConfigValue_4 extends _i1.SmartFake
    implements _i4.RemoteConfigValue {
  _FakeRemoteConfigValue_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieService extends _i1.Mock implements _i5.MovieService {
  MockMovieService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i7.MovieResponseModel> getMovies(
    _i8.CancelToken? cancelToken, {
    required _i9.MovieRequestModel? requestModel,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovies,
          [cancelToken],
          {#requestModel: requestModel},
        ),
        returnValue: _i6.Future<_i7.MovieResponseModel>.value(
            _i10.dummyValue<_i7.MovieResponseModel>(
          this,
          Invocation.method(
            #getMovies,
            [cancelToken],
            {#requestModel: requestModel},
          ),
        )),
      ) as _i6.Future<_i7.MovieResponseModel>);

  @override
  _i6.Future<_i11.GenreResponseModel> getGenres(_i8.CancelToken? cancelToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGenres,
          [cancelToken],
        ),
        returnValue: _i6.Future<_i11.GenreResponseModel>.value(
            _i10.dummyValue<_i11.GenreResponseModel>(
          this,
          Invocation.method(
            #getGenres,
            [cancelToken],
          ),
        )),
      ) as _i6.Future<_i11.GenreResponseModel>);

  @override
  _i6.Future<_i2.MovieDetailResponseModel> getMovieDetail(
    _i8.CancelToken? cancelToken,
    int? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [
            cancelToken,
            id,
          ],
        ),
        returnValue: _i6.Future<_i2.MovieDetailResponseModel>.value(
            _FakeMovieDetailResponseModel_0(
          this,
          Invocation.method(
            #getMovieDetail,
            [
              cancelToken,
              id,
            ],
          ),
        )),
      ) as _i6.Future<_i2.MovieDetailResponseModel>);

  @override
  _i6.Future<_i12.MovieVideoResponseModel> getMovieVideos(
    _i8.CancelToken? cancelToken,
    int? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieVideos,
          [
            cancelToken,
            id,
          ],
        ),
        returnValue: _i6.Future<_i12.MovieVideoResponseModel>.value(
            _i10.dummyValue<_i12.MovieVideoResponseModel>(
          this,
          Invocation.method(
            #getMovieVideos,
            [
              cancelToken,
              id,
            ],
          ),
        )),
      ) as _i6.Future<_i12.MovieVideoResponseModel>);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i13.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i14.Either<_i15.Failure?, _i7.MovieResponseModel>> getMovies(
    _i8.CancelToken? cancelToken,
    _i9.MovieRequestModel? requestModel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovies,
          [
            cancelToken,
            requestModel,
          ],
        ),
        returnValue: _i6
            .Future<_i14.Either<_i15.Failure?, _i7.MovieResponseModel>>.value(
            _i10.dummyValue<_i14.Either<_i15.Failure?, _i7.MovieResponseModel>>(
          this,
          Invocation.method(
            #getMovies,
            [
              cancelToken,
              requestModel,
            ],
          ),
        )),
      ) as _i6.Future<_i14.Either<_i15.Failure?, _i7.MovieResponseModel>>);

  @override
  _i6.Future<_i14.Either<_i15.Failure?, _i11.GenreResponseModel>> getGenres(
          _i8.CancelToken? cancelToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGenres,
          [cancelToken],
        ),
        returnValue: _i6
            .Future<_i14.Either<_i15.Failure?, _i11.GenreResponseModel>>.value(
            _i10.dummyValue<
                _i14.Either<_i15.Failure?, _i11.GenreResponseModel>>(
          this,
          Invocation.method(
            #getGenres,
            [cancelToken],
          ),
        )),
      ) as _i6.Future<_i14.Either<_i15.Failure?, _i11.GenreResponseModel>>);

  @override
  _i6.Future<
      _i14.Either<_i15.Failure?, _i2.MovieDetailResponseModel>> getMovieDetail(
    _i8.CancelToken? cancelToken,
    int? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [
            cancelToken,
            id,
          ],
        ),
        returnValue: _i6.Future<
                _i14.Either<_i15.Failure?, _i2.MovieDetailResponseModel>>.value(
            _i10.dummyValue<
                _i14.Either<_i15.Failure?, _i2.MovieDetailResponseModel>>(
          this,
          Invocation.method(
            #getMovieDetail,
            [
              cancelToken,
              id,
            ],
          ),
        )),
      ) as _i6
          .Future<_i14.Either<_i15.Failure?, _i2.MovieDetailResponseModel>>);

  @override
  _i6.Future<
      _i14.Either<_i15.Failure?, _i12.MovieVideoResponseModel>> getMovieVideos(
    _i8.CancelToken? cancelToken,
    int? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieVideos,
          [
            cancelToken,
            id,
          ],
        ),
        returnValue: _i6.Future<
                _i14.Either<_i15.Failure?, _i12.MovieVideoResponseModel>>.value(
            _i10.dummyValue<
                _i14.Either<_i15.Failure?, _i12.MovieVideoResponseModel>>(
          this,
          Invocation.method(
            #getMovieVideos,
            [
              cancelToken,
              id,
            ],
          ),
        )),
      ) as _i6
          .Future<_i14.Either<_i15.Failure?, _i12.MovieVideoResponseModel>>);
}

/// A class which mocks [FirebaseRemoteConfig].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseRemoteConfig extends _i1.Mock
    implements _i16.FirebaseRemoteConfig {
  MockFirebaseRemoteConfig() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_1(
          this,
          Invocation.getter(#app),
        ),
      ) as _i3.FirebaseApp);

  @override
  DateTime get lastFetchTime => (super.noSuchMethod(
        Invocation.getter(#lastFetchTime),
        returnValue: _FakeDateTime_2(
          this,
          Invocation.getter(#lastFetchTime),
        ),
      ) as DateTime);

  @override
  _i4.RemoteConfigFetchStatus get lastFetchStatus => (super.noSuchMethod(
        Invocation.getter(#lastFetchStatus),
        returnValue: _i4.RemoteConfigFetchStatus.noFetchYet,
      ) as _i4.RemoteConfigFetchStatus);

  @override
  _i4.RemoteConfigSettings get settings => (super.noSuchMethod(
        Invocation.getter(#settings),
        returnValue: _FakeRemoteConfigSettings_3(
          this,
          Invocation.getter(#settings),
        ),
      ) as _i4.RemoteConfigSettings);

  @override
  _i6.Stream<_i4.RemoteConfigUpdate> get onConfigUpdated => (super.noSuchMethod(
        Invocation.getter(#onConfigUpdated),
        returnValue: _i6.Stream<_i4.RemoteConfigUpdate>.empty(),
      ) as _i6.Stream<_i4.RemoteConfigUpdate>);

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i6.Future<bool> activate() => (super.noSuchMethod(
        Invocation.method(
          #activate,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<void> ensureInitialized() => (super.noSuchMethod(
        Invocation.method(
          #ensureInitialized,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> fetch() => (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> fetchAndActivate() => (super.noSuchMethod(
        Invocation.method(
          #fetchAndActivate,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  Map<String, _i4.RemoteConfigValue> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: <String, _i4.RemoteConfigValue>{},
      ) as Map<String, _i4.RemoteConfigValue>);

  @override
  bool getBool(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  int getInt(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getInt,
          [key],
        ),
        returnValue: 0,
      ) as int);

  @override
  double getDouble(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getDouble,
          [key],
        ),
        returnValue: 0.0,
      ) as double);

  @override
  String getString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
        ),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #getString,
            [key],
          ),
        ),
      ) as String);

  @override
  _i4.RemoteConfigValue getValue(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getValue,
          [key],
        ),
        returnValue: _FakeRemoteConfigValue_4(
          this,
          Invocation.method(
            #getValue,
            [key],
          ),
        ),
      ) as _i4.RemoteConfigValue);

  @override
  _i6.Future<void> setConfigSettings(
          _i4.RemoteConfigSettings? remoteConfigSettings) =>
      (super.noSuchMethod(
        Invocation.method(
          #setConfigSettings,
          [remoteConfigSettings],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setDefaults(Map<String, dynamic>? defaultParameters) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDefaults,
          [defaultParameters],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}
